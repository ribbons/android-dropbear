name: Build
on:
  push:
    branches-ignore: dependabot/**
  pull_request:
  schedule:
    - cron: '30 12 * * 5'
  workflow_dispatch:

jobs:
  compile:
    name: Compile
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - armv7a-linux-androideabi
          - aarch64-linux-android
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build script
        run: ./build
        env:
          TARGET: ${{ matrix.target }}

      - name: Collect binaries and build info
        run: |
          mkdir output buildinfo
          cp dropbear/dropbear output
          cp dropbear/dbclient output
          cp dropbear/dropbearkey output
          cp dropbear/dropbearconvert output
          cp dropbear/LICENSE output/LICENSE.txt
          cp dropbear/scp output/scp
          cp dropbear-version buildinfo/release
          grep Pkg.Revision "$ANDROID_HOME/ndk-bundle/source.properties" | \
               cut -d ' ' -f 3 >> buildinfo/ndkver

      - name: Upload binaries as artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.target }}
          path: output

      - name: Upload build info as artifact
        uses: actions/upload-artifact@v1
        with:
          name: buildinfo
          path: buildinfo

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: compile

    steps:
      - name: Fetch build info artifact
        uses: actions/download-artifact@v1
        with:
          name: buildinfo

      - name: Extract info to environment vars
        run: |
          echo "BUILD_RELEASE=$(cat buildinfo/release)" >> "$GITHUB_ENV"
          echo "NDK_VERSION=$(cat buildinfo/ndkver)" >> "$GITHUB_ENV"

      - name: Latest release tag name
        id: latest_release
        uses: actions/github-script@v3
        with:
          result-encoding: string
          script: |
            const query = `query release($owner:String!, $repo:String!) {
              repository(owner:$owner, name:$repo) {
                releases(first:1, orderBy:{field:CREATED_AT, direction:DESC}) {
                  nodes {
                    tagName
                  }
                }
              }
            }`
            const vars = {
              owner: context.repo.owner,
              repo: context.repo.repo,
            }
            const result = await github.graphql(query, vars)
            const node = result.repository.releases.nodes[0]
            return node?node.tagName:""

      - name: Fetch armv7a artifact
        uses: actions/download-artifact@v1
        with:
          name: armv7a-linux-androideabi

      - name: Fetch aarch64 artifact
        uses: actions/download-artifact@v1
        with:
          name: aarch64-linux-android

      - name: Package assets
        run: |
          zip --junk-paths dropbear-armv7a-linux-androideabi.zip \
              armv7a-linux-androideabi/*
          zip --junk-paths dropbear-aarch64-linux-android.zip \
              aarch64-linux-android/*

      - name: Create release
        if: >
          env.BUILD_RELEASE != steps.latest_release.outputs.result &&
          github.event_name == 'push' && github.ref == 'refs/heads/master'
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.BUILD_RELEASE }}
          release_name: ${{ env.BUILD_RELEASE }}
          body: >
            Dropbear SSH binaries built for Android with NDK version
            ${{ env.NDK_VERSION }}.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload armv7a-linux-androideabi zip asset
        if: >
          env.BUILD_RELEASE != steps.latest_release.outputs.result &&
          github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dropbear-armv7a-linux-androideabi.zip
          asset_name: dropbear-armv7a-linux-androideabi.zip
          asset_content_type: application/zip

      - name: Upload aarch64-linux-android zip asset
        if: >
          env.BUILD_RELEASE != steps.latest_release.outputs.result &&
          github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dropbear-aarch64-linux-android.zip
          asset_name: dropbear-aarch64-linux-android.zip
          asset_content_type: application/zip
